<html>
	<head>
		<title>Documentation</title>
		<hta:application id="doscapp" applicationname="docs"">
		<meta http-equiv="x-ua-compatible" content="ie=11">
		<script>
			var shown = []
			function show(id) {
				var toShow = document.getElementById(id)
				if (!toShow) {return}
				shown.push(toShow)
				toShow.hidden = false
			}
			function hideAll() {
				for (var i = 0;i < shown.length;i++) {shown[i].hidden = true}
				shown = []
			}
			window.onload = function() {show('$index')}
		</script>
		<style>
			body {
				font-family: "Open Sans",arial,x-locale-body,sans-serif;
				font-style: normal;
				padding-left: 0px;
				padding-top: 0px
			}
			li, .back {
				color: #ff8800
			}
			.black {
				color: #000000
			}
			ul {
				padding-left: 20px;
				margin-top: 0px;
				padding-top: 0px
			}
			h1, h3 {
				margin-bottom: 0px;
				padding-bottom: 0px
				padding-top: 20px
			}
			.code {
				padding-left: 20px;
				padding-right: 20px;
				background: #dfdfdf;
				padding-top: 30px;
				font-family: monospace;
				overflow: auto;
				white-space: nowrap;
				height: 50px
			}
		</style>
	</head>
<body>
<div id="$index" hidden>
<h1>Classes</h1><ul>
<li onclick="hideAll();show('+B')">B</li>
<li onclick="hideAll();show('+BNetwork')">BNetwork</li>
<li onclick="hideAll();show('+BNetwork.PlayerData')">BNetwork.PlayerData</li>
<li onclick="hideAll();show('+global')">global</li>
<li onclick="hideAll();show('+BasicMsg')">BasicMsg</li>
<li onclick="hideAll();show('+UIInvertColor')">UIInvertColor</li>
</ul></div>
<div id="+B" hidden>
<h1>B</h1>
<span class="back" onclick="hideAll();show('$index')">&#9668; Back to index</span>
<p>Static helper class with very helpful functions</p>
<h3>Functions</h3>
<ul>
<li onclick="hideAll();show('-B:SerializeString')">SerializeString</li>
<li onclick="hideAll();show('-B:DeserializeString')">DeserializeString</li>
<li onclick="hideAll();show('-B:SerializeDict')">SerializeDict</li>
<li onclick="hideAll();show('-B:DeserializeDict')">DeserializeDict</li>
<li onclick="hideAll();show('-B:SerializeList')">SerializeList</li>
<li onclick="hideAll();show('-B:Deserializelist')">Deserializelist</li>
<li onclick="hideAll();show('-B:GetChildren')">GetChildren</li>
<li onclick="hideAll();show('-B:DestroyChildren')">DestroyChildren</li>
</ul>
</div>
<div id="-B:SerializeString" hidden>
<h1>B.SerializeString</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> SerializeString(
<b>string</b> text
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>string</b>: Serialized string</li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>string</b> text: String to serialize</li></ul>
<p>Serializes the provided string to hex ASCII codes.</p>
</div>
<div id="-B:DeserializeString" hidden>
<h1>B.DeserializeString</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> DeserializeString(
<b>string</b> serialized
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>string</b>: Deserialized string</li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>string</b> serialized: Previously serialized string</li></ul>
<p>Deserializes strings in a X2 ASCII format</p>
</div>
<div id="-B:SerializeDict" hidden>
<h1>B.SerializeDict</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> SerializeDict(
<b>Dictionary&lt;string,string&gt;</b> dictionary
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>string</b>: Serialized dictionary</li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>Dictionary&lt;string,string&gt;</b> dictionary: <b>Dictionary</b> to serialize</li></ul>
<p>A function to serialize a string <b>Dictionary</b>.</p>
</div>
<div id="-B:DeserializeDict" hidden>
<h1>B.DeserializeDict</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>Dictionary&lt;string,string&gt;</b> DeserializeDict(
<b>string</b> dict
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>Dictionary&lt;string,string&gt;</b>: Deserialized <b>Dictionary</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>string</b> dict: Previously serialized <b>Dictionary</b></li></ul>
<p>Deserializes a <b>Dictionary</b> in a X2 ASCII format.</p>
</div>
<div id="-B:SerializeList" hidden>
<h1>B.SerializeList</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> SerializeList(
<b>List&lt;string&gt;</b> List
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>string</b>: Serialized List</li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>List&lt;string&gt;</b> List: <b>List</b> to serialize</li></ul>
<p>A function to serialize a string <b>List</b>.</p>
</div>
<div id="-B:Deserializelist" hidden>
<h1>B.Deserializelist</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>List&lt;string&gt;</b> Deserializelist(
<b>string</b> list
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>List&lt;string&gt;</b>: Deserialized <b>List</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>string</b> list: Previously serialized <b>List</b></li></ul>
<p>Deserializes a <b>List</b> in a X2 ASCII format.</p>
</div>
<div id="-B:GetChildren" hidden>
<h1>B.GetChildren</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>Transform[]</b> GetChildren(
<b>Transform</b> target
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>Transform[]</b>: Children of the provided <b>Transform</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>Transform</b> target: The <b>Transform</b> to get children of</li></ul>
<p>Returns all children of the provided <b>Transform</b></p>
</div>
<div id="-B:DestroyChildren" hidden>
<h1>B.DestroyChildren</h1>
<span class="back" onclick="hideAll();show('+B')">&#9668; Back to class</span><br />
<div class="code">
<b>void</b> DestroyChildren(
<b>Transform</b> target
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>void</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>Transform</b> target: The <b>Transform</b> to remove children of</li></ul>
<p>Removes all children of the provided <b>Transform</b></p>
</div>
<div id="+BNetwork" hidden>
<h1>BNetwork</h1>
<span class="back" onclick="hideAll();show('$index')">&#9668; Back to index</span>
<p>Component for establishing lowlevel connections between computers and basic msg exchange.</p>
<h3>Methods</h3>
<ul>
<li onclick="hideAll();show('-BNetwork:Listen')">Listen</li>
<li onclick="hideAll();show('-BNetwork:Connect')">Connect</li>
<li onclick="hideAll();show('-BNetwork:StartLocalPlayer')">StartLocalPlayer</li>
<li onclick="hideAll();show('-BNetwork:Broadcast')">Broadcast</li>
<li onclick="hideAll();show('-BNetwork:BroadcastFromServer')">BroadcastFromServer</li>
</ul>
<h3>Properties</h3>
<ul>
<li onclick="hideAll();show('-BNetwork:client')">client</li>
<li onclick="hideAll();show('-BNetwork:instance')">instance</li>
<li onclick="hideAll();show('-BNetwork:port')">port</li>
<li onclick="hideAll();show('-BNetwork:listening')">listening</li>
<li onclick="hideAll();show('-BNetwork:connected')">connected</li>
</ul>
</div>
<div id="-BNetwork:Listen" hidden>
<h1>BNetwork.Listen</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>void</b> Listen(

)
</div>
<p>Returns:</p>
<ul><li class="black"><b>void</b></li></ul>
<p>Starts the server listening.</p>
</div>
<div id="-BNetwork:Connect" hidden>
<h1>BNetwork.Connect</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>void</b> Connect(
<b>string</b> ip
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>void</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>string</b> ip: The ip to connect to</li></ul>
<p>Connects the client to a server on the provided ip address.</p>
</div>
<div id="-BNetwork:StartLocalPlayer" hidden>
<h1>BNetwork.StartLocalPlayer</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>void</b> StartLocalPlayer(

)
</div>
<p>Returns:</p>
<ul><li class="black"><b>void</b></li></ul>
<p>Starts a server using Listen and connect to it.</p>
</div>
<div id="-BNetwork:Broadcast" hidden>
<h1>BNetwork.Broadcast</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>void</b> Broadcast(
<b>BasicMsg</b> message
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>void</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>BasicMsg</b> message: Message to send</li></ul>
<p>Sends a message to all connected clients.</p>
</div>
<div id="-BNetwork:BroadcastFromServer" hidden>
<h1>BNetwork.BroadcastFromServer</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>void</b> BroadcastFromServer(
<b>BasicMsg</b> message
)
</div>
<p>Returns:</p>
<ul><li class="black"><b>void</b></li></ul>
<p>Arguments:</p>
<ul><li class="black"><b>BasicMsg</b> message: Message to send</li></ul>
<p>Sends a message to the server.</p>
</div>
<div id="-BNetwork:client" hidden>
<h1>BNetwork.client</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>NetworkClient</b> client = <i>null</i>
</div>
<p>Client used to connect to a server</p>
</div>
<div id="-BNetwork:instance" hidden>
<h1>BNetwork.instance</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>BNetwork</b> instance = <i>null</i>
</div>
<p>Singleton instance</p>
</div>
<div id="-BNetwork:port" hidden>
<h1>BNetwork.port</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>int</b> port = <i>7777</i>
</div>
<p>Port to connect or listen</p>
</div>
<div id="-BNetwork:listening" hidden>
<h1>BNetwork.listening</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>bool</b> listening = <i>false</i>
</div>
<p>Is the <b>BNetwork</b> listening?</p>
</div>
<div id="-BNetwork:connected" hidden>
<h1>BNetwork.connected</h1>
<span class="back" onclick="hideAll();show('+BNetwork')">&#9668; Back to class</span><br />
<div class="code">
<b>BasicMsg</b> connected = <i>null</i>
</div>
<p>Last message recieved</p>
</div>
<div id="+BNetwork.PlayerData" hidden>
<h1>BNetwork.PlayerData</h1>
<span class="back" onclick="hideAll();show('$index')">&#9668; Back to index</span>
</div>
<div id="+global" hidden>
<h1>global</h1>
<span class="back" onclick="hideAll();show('$index')">&#9668; Back to index</span>
<p>A global object whitch members acessible anywhere.</p>
<h3>Properties</h3>
<ul>
<li onclick="hideAll();show('-global:ip')">ip</li>
</ul>
</div>
<div id="-global:ip" hidden>
<h1>global.ip</h1>
<span class="back" onclick="hideAll();show('+global')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> ip = <i>null</i>
</div>
<p>IP address of the player.</p>
</div>
<div id="+BasicMsg" hidden>
<h1>BasicMsg</h1>
<span class="back" onclick="hideAll();show('$index')">&#9668; Back to index</span>
<h3>Functions</h3>
<ul>
<li onclick="hideAll();show('-BasicMsg:BasicMsg')">BasicMsg</li>
</ul>
<h3>Properties</h3>
<ul>
<li onclick="hideAll();show('-BasicMsg:type')">type</li>
<li onclick="hideAll();show('-BasicMsg:target')">target</li>
<li onclick="hideAll();show('-BasicMsg:msg')">msg</li>
<li onclick="hideAll();show('-BasicMsg:source')">source</li>
</ul>
</div>
<div id="-BasicMsg:BasicMsg" hidden>
<h1>BasicMsg.BasicMsg</h1>
<span class="back" onclick="hideAll();show('+BasicMsg')">&#9668; Back to class</span><br />
<div class="code">
<b>new</b> BasicMsg(
<b>string</b> type, <b>string</b> target, <b>string</b> message
)
</div>
<p>Returns:</p>
<p>Arguments:</p>
<ul><li class="black"><b>string</b> type: Message type</li></ul>
<ul><li class="black"><b>string</b> target: Message target</li></ul>
<ul><li class="black"><b>string</b> message: Message message</li></ul>
</div>
<div id="-BasicMsg:type" hidden>
<h1>BasicMsg.type</h1>
<span class="back" onclick="hideAll();show('+BasicMsg')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> type = <i>null</i>
</div>
</div>
<div id="-BasicMsg:target" hidden>
<h1>BasicMsg.target</h1>
<span class="back" onclick="hideAll();show('+BasicMsg')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> target = <i>null</i>
</div>
</div>
<div id="-BasicMsg:msg" hidden>
<h1>BasicMsg.msg</h1>
<span class="back" onclick="hideAll();show('+BasicMsg')">&#9668; Back to class</span><br />
<div class="code">
<b>string</b> msg = <i>null</i>
</div>
</div>
<div id="-BasicMsg:source" hidden>
<h1>BasicMsg.source</h1>
<span class="back" onclick="hideAll();show('+BasicMsg')">&#9668; Back to class</span><br />
<div class="code">
<b>int</b> source = <i>null</i>
</div>
</div>
<div id="+UIInvertColor" hidden>
<h1>UIInvertColor</h1>
<span class="back" onclick="hideAll();show('$index')">&#9668; Back to index</span>
<p>UI helper class for dynamic contrast.</p>
<h3>Properties</h3>
<ul>
<li onclick="hideAll();show('-UIInvertColor:source')">source</li>
<li onclick="hideAll();show('-UIInvertColor:target')">target</li>
</ul>
</div>
<div id="-UIInvertColor:source" hidden>
<h1>UIInvertColor.source</h1>
<span class="back" onclick="hideAll();show('+UIInvertColor')">&#9668; Back to class</span><br />
<div class="code">
<b>Graphic</b> source = <i>null</i>
</div>
<p><b>Graphic</b> with the source color</p>
</div>
<div id="-UIInvertColor:target" hidden>
<h1>UIInvertColor.target</h1>
<span class="back" onclick="hideAll();show('+UIInvertColor')">&#9668; Back to class</span><br />
<div class="code">
<b>Graphic</b> target = <i>null</i>
</div>
<p>Traget <b>Graphic</b> to set the inverted color</p>
</div>
</body></html>